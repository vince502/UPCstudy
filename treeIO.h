#ifndef __PARTICLE_IO__
#define __PARTICLE_IO__

#include <vector>
#include "TFile.h"
#include "TTree.h"

class ParticleTreeReader{
    public:    
        ParticleTreeReader(const string& fileName, const string& treeName){
            theFile = TFile::Open(fileName.c_str());
            theTree = (TTree*) theFile->Get(treeName.c_str());
            theReader = new TTreeReader(treeName.c_str(), theFile);
            if(theTree->GetBranch("nPV") != nullptr) nPV = new TTreeReaderValue<unsigned char>(*theReader, "nPV")      ;
            if(theTree->GetBranch("BXNb") != nullptr) BXNb = new TTreeReaderValue<unsigned short>(*theReader, "BXNb")     ;
            if(theTree->GetBranch("NtrkHP") != nullptr) NtrkHP = new TTreeReaderValue<unsigned short>(*theReader, "NtrkHP")   ;
            if(theTree->GetBranch("Ntrkoffline") != nullptr) Ntrkoffline = new TTreeReaderValue<unsigned short>(*theReader, "Ntrkoffline");
            if(theTree->GetBranch("EventNb") != nullptr) EventNb = new TTreeReaderValue<unsigned int>(*theReader, "EventNb")  ;
            if(theTree->GetBranch("LSNb") != nullptr) LSNb = new TTreeReaderValue<unsigned int>(*theReader, "LSNb")     ;
            if(theTree->GetBranch("RunNb") != nullptr) RunNb = new TTreeReaderValue<unsigned int>(*theReader, "RunNb")    ;
            if(theTree->GetBranch("Ntrkgen") != nullptr) Ntrkgen = new TTreeReaderValue<int>(*theReader, "Ntrkgen")    ;
            if(theTree->GetBranch("HFsumETMinus") != nullptr) HFsumETMinus = new TTreeReaderValue<float>(*theReader, "HFsumETMinus");
            if(theTree->GetBranch("HFsumETPlus") != nullptr) HFsumETPlus = new TTreeReaderValue<float>(*theReader, "HFsumETPlus");
            if(theTree->GetBranch("Npixel") != nullptr) Npixel = new TTreeReaderValue<float>(*theReader, "Npixel")   ;
            if(theTree->GetBranch("PFHFmaxEMinus") != nullptr) PFHFmaxEMinus = new TTreeReaderValue<float>(*theReader, "PFHFmaxEMinus");
            if(theTree->GetBranch("PFHFmaxEPlus") != nullptr) PFHFmaxEPlus = new TTreeReaderValue<float>(*theReader, "PFHFmaxEPlus");
            if(theTree->GetBranch("PFHFsumETMinus") != nullptr) PFHFsumETMinus = new TTreeReaderValue<float>(*theReader, "PFHFsumETMinus");
            if(theTree->GetBranch("PFHFsumETPlus") != nullptr) PFHFsumETPlus = new TTreeReaderValue<float>(*theReader, "PFHFsumETPlus");
            if(theTree->GetBranch("ZDCMinus") != nullptr) ZDCMinus = new TTreeReaderValue<float>(*theReader, "ZDCMinus") ;
            if(theTree->GetBranch("ZDCPlus") != nullptr) ZDCPlus = new TTreeReaderValue<float>(*theReader, "ZDCPlus")  ;
            if(theTree->GetBranch("bestvtxX") != nullptr) bestvtxX = new TTreeReaderValue<float>(*theReader, "bestvtxX") ;
            if(theTree->GetBranch("bestvtxY") != nullptr) bestvtxY = new TTreeReaderValue<float>(*theReader, "bestvtxY") ;
            if(theTree->GetBranch("bestvtxZ") != nullptr) bestvtxZ = new TTreeReaderValue<float>(*theReader, "bestvtxZ") ;
            if(theTree->GetBranch("evtSel") != nullptr) evtSel = new TTreeReaderValue<std::vector<bool> >(*theReader, "evtSel")   ;
            if(theTree->GetBranch("passHLT") != nullptr) passHLT = new TTreeReaderValue<std::vector<bool> >(*theReader, "passHLT")  ;
            if(theTree->GetBranch("passL1") != nullptr) passL1 = new TTreeReaderValue<std::vector<bool> >(*theReader, "passL1")   ;
            if( theTree->GetBranch("cand_genPdgId") != nullptr ){
                if(theTree->GetBranch("cand_matchGEN") != nullptr) cand_matchGEN = new TTreeReaderValue<std::vector<bool> >(*theReader, "cand_matchGEN");
                if(theTree->GetBranch("cand_momMatchGEN") != nullptr) cand_momMatchGEN = new TTreeReaderValue<std::vector<bool> >(*theReader, "cand_momMatchGEN");
                if(theTree->GetBranch("cand_genPdgId") != nullptr) cand_genPdgId = new TTreeReaderValue<std::vector<int> >(*theReader, "cand_genPdgId");
                if(theTree->GetBranch("cand_genIdx") != nullptr) cand_genIdx = new TTreeReaderValue<std::vector<unsigned short> >(*theReader, "cand_genIdx");
            }
            if(theTree->GetBranch("cand_charge") != nullptr) cand_charge = new TTreeReaderValue<std::vector<char> >(*theReader, "cand_charge");
            if(theTree->GetBranch("cand_isSwap") != nullptr) cand_isSwap = new TTreeReaderValue<std::vector<int> >(*theReader, "cand_isSwap");
            if(theTree->GetBranch("cand_pdgId") != nullptr) cand_pdgId = new TTreeReaderValue<std::vector<int> >(*theReader, "cand_pdgId");
            if(theTree->GetBranch("cand_status") != nullptr) cand_status = new TTreeReaderValue<std::vector<unsigned char> >(*theReader, "cand_status");
            if(theTree->GetBranch("cand_trkIdx") != nullptr) cand_trkIdx = new TTreeReaderValue<std::vector<unsigned short> >(*theReader, "cand_trkIdx");
            if(theTree->GetBranch("cand_momMatchIdx") != nullptr) cand_momMatchIdx = new TTreeReaderValue<std::vector<unsigned int> >(*theReader, "cand_momMatchIdx");
            if(theTree->GetBranch("cand_angle2D") != nullptr) cand_angle2D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_angle2D");
            if(theTree->GetBranch("cand_angle3D") != nullptr) cand_angle3D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_angle3D");
            if(theTree->GetBranch("cand_dca") != nullptr) cand_dca = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_dca") ;
            if(theTree->GetBranch("cand_decayLength2D") != nullptr) cand_decayLength2D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_decayLength2D");
            if(theTree->GetBranch("cand_decayLength3D") != nullptr) cand_decayLength3D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_decayLength3D");
            if(theTree->GetBranch("cand_decayLengthError2D") != nullptr) cand_decayLengthError2D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_decayLengthError2D");
            if(theTree->GetBranch("cand_decayLengthError3D") != nullptr) cand_decayLengthError3D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_decayLengthError3D");
            if(theTree->GetBranch("cand_eta") != nullptr) cand_eta = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_eta") ;
            if(theTree->GetBranch("cand_mass") != nullptr) cand_mass = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_mass");
            if(theTree->GetBranch("cand_p") != nullptr) cand_p = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_p")   ;
            if(theTree->GetBranch("cand_pT") != nullptr) cand_pT = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_pT")  ;
            if(theTree->GetBranch("cand_phi") != nullptr) cand_phi = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_phi") ;
            if(theTree->GetBranch("cand_pseudoDecayLengthError2D") != nullptr) cand_pseudoDecayLengthError2D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_pseudoDecayLengthError2D");
            if(theTree->GetBranch("cand_pseudoDecayLengthError3D") != nullptr) cand_pseudoDecayLengthError3D = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_pseudoDecayLengthError3D");
            if(theTree->GetBranch("cand_vtxChi2") != nullptr) cand_vtxChi2 = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_vtxChi2");
            if(theTree->GetBranch("cand_vtxProb") != nullptr) cand_vtxProb = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_vtxProb");
            if(theTree->GetBranch("cand_y") != nullptr) cand_y = new TTreeReaderValue<std::vector<float> >(*theReader, "cand_y")   ;
            if(theTree->GetBranch("cand_dauIdx") != nullptr) cand_dauIdx = new TTreeReaderValue<std::vector<std::vector<unsigned int> > >(*theReader, "cand_dauIdx");
            if(theTree->GetBranch("cand_momIdx") != nullptr) cand_momIdx = new TTreeReaderValue<std::vector<std::vector<unsigned int> > >(*theReader, "cand_momIdx");
            if(theTree->GetBranch("cand_etaDau") != nullptr) cand_etaDau = new TTreeReaderValue<std::vector<std::vector<float> > >(*theReader, "cand_etaDau");
            if(theTree->GetBranch("cand_massDau") != nullptr) cand_massDau = new TTreeReaderValue<std::vector<std::vector<float> > >(*theReader, "cand_massDau");
            if(theTree->GetBranch("cand_pTDau") != nullptr) cand_pTDau = new TTreeReaderValue<std::vector<std::vector<float> > >(*theReader, "cand_pTDau");
            if(theTree->GetBranch("cand_phiDau") != nullptr) cand_phiDau = new TTreeReaderValue<std::vector<std::vector<float> > >(*theReader, "cand_phiDau");
            if(theTree->GetBranch("trk_isHP") != nullptr) trk_isHP = new TTreeReaderValue<std::vector<bool> >(*theReader, "trk_isHP") ;
            if(theTree->GetBranch("trk_nLayer") != nullptr) trk_nLayer = new TTreeReaderValue<std::vector<int> >(*theReader, "trk_nLayer");
            if(theTree->GetBranch("trk_algo") != nullptr) trk_algo = new TTreeReaderValue<std::vector<unsigned short> >(*theReader, "trk_algo") ;
            if(theTree->GetBranch("trk_nHit") != nullptr) trk_nHit = new TTreeReaderValue<std::vector<unsigned short> >(*theReader, "trk_nHit") ;
            if(theTree->GetBranch("trk_nChi2") != nullptr) trk_nChi2 = new TTreeReaderValue<std::vector<float> >(*theReader, "trk_nChi2");
            if(theTree->GetBranch("trk_pTErr") != nullptr) trk_pTErr = new TTreeReaderValue<std::vector<float> >(*theReader, "trk_pTErr");
            if(theTree->GetBranch("trk_xyDCASignificance") != nullptr) trk_xyDCASignificance = new TTreeReaderValue<std::vector<float> >(*theReader, "trk_xyDCASignificance");
            if(theTree->GetBranch("trk_zDCASignificance") != nullptr) trk_zDCASignificance = new TTreeReaderValue<std::vector<float> >(*theReader, "trk_zDCASignificance");
            if(theTree->GetBranch("trk_candIdx") != nullptr) trk_candIdx = new TTreeReaderValue<std::vector<std::vector<unsigned int> > >(*theReader, "trk_candIdx");
            if(theTree->GetBranch("trk_trackCovariance") != nullptr) trk_trackCovariance = new TTreeReaderValue<std::vector<std::vector<float> > >(*theReader, "trk_trackCovariance");
            if(theTree->GetBranch("trk_trackParameters") != nullptr) trk_trackParameters = new TTreeReaderValue<std::vector<std::vector<float> > >(*theReader, "trk_trackParameters");
            if(theTree->GetBranch("cand_srcIdx") != nullptr) cand_srcIdx = new TTreeReaderValue<std::vector<unsigned short> >(*theReader, "cand_srcIdx");
            if(theTree->GetBranch("muon_hybridSoftID") != nullptr) muon_hybridSoftID = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_hybridSoftID");
            if(theTree->GetBranch("muon_isGlobal") != nullptr) muon_isGlobal = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_isGlobal");
            if(theTree->GetBranch("muon_isOneStTight") != nullptr) muon_isOneStTight = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_isOneStTight");
            if(theTree->GetBranch("muon_isPF") != nullptr) muon_isPF = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_isPF");
            if(theTree->GetBranch("muon_isTracker") != nullptr) muon_isTracker = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_isTracker");
            if(theTree->GetBranch("muon_softID") != nullptr) muon_softID = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_softID");
            if(theTree->GetBranch("muon_tightID") != nullptr) muon_tightID = new TTreeReaderValue<std::vector<bool> >(*theReader, "muon_tightID");
            if(theTree->GetBranch("muon_nMuonHit") != nullptr) muon_nMuonHit = new TTreeReaderValue<std::vector<char> >(*theReader, "muon_nMuonHit");
            if(theTree->GetBranch("muon_nPixelHit") != nullptr) muon_nPixelHit = new TTreeReaderValue<std::vector<char> >(*theReader, "muon_nPixelHit");
            if(theTree->GetBranch("muon_nPixelLayer") != nullptr) muon_nPixelLayer = new TTreeReaderValue<std::vector<char> >(*theReader, "muon_nPixelLayer");
            if(theTree->GetBranch("muon_nTrackerLayer") != nullptr) muon_nTrackerLayer = new TTreeReaderValue<std::vector<char> >(*theReader, "muon_nTrackerLayer");
            if(theTree->GetBranch("muon_nMatchedStation") != nullptr) muon_nMatchedStation = new TTreeReaderValue<std::vector<unsigned char> >(*theReader, "muon_nMatchedStation");
            if(theTree->GetBranch("muon_nMatches") != nullptr) muon_nMatches = new TTreeReaderValue<std::vector<unsigned char> >(*theReader, "muon_nMatches");
            if(theTree->GetBranch("muon_candIdx") != nullptr) muon_candIdx = new TTreeReaderValue<std::vector<unsigned int> >(*theReader, "muon_candIdx");
            if(theTree->GetBranch("muon_selectionType") != nullptr) muon_selectionType = new TTreeReaderValue<std::vector<unsigned int> >(*theReader, "muon_selectionType");
            if(theTree->GetBranch("muon_selector") != nullptr) muon_selector = new TTreeReaderValue<std::vector<unsigned int> >(*theReader, "muon_selector");
            if(theTree->GetBranch("muon_bestTrkdXY") != nullptr) muon_bestTrkdXY = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_bestTrkdXY");
            if(theTree->GetBranch("muon_bestTrkdZ") != nullptr) muon_bestTrkdZ = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_bestTrkdZ");
            if(theTree->GetBranch("muon_dXSig_seg") != nullptr) muon_dXSig_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_dXSig_seg");
            if(theTree->GetBranch("muon_dXY") != nullptr) muon_dXY = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_dXY") ;
            if(theTree->GetBranch("muon_dX_seg") != nullptr) muon_dX_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_dX_seg");
            if(theTree->GetBranch("muon_dYSig_seg") != nullptr) muon_dYSig_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_dYSig_seg");
            if(theTree->GetBranch("muon_dY_seg") != nullptr) muon_dY_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_dY_seg");
            if(theTree->GetBranch("muon_dZ") != nullptr) muon_dZ = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_dZ")  ;
            if(theTree->GetBranch("muon_ddXdZSig_seg") != nullptr) muon_ddXdZSig_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_ddXdZSig_seg");
            if(theTree->GetBranch("muon_ddXdZ_seg") != nullptr) muon_ddXdZ_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_ddXdZ_seg");
            if(theTree->GetBranch("muon_ddYdZSig_seg") != nullptr) muon_ddYdZSig_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_ddYdZSig_seg");
            if(theTree->GetBranch("muon_ddYdZ_seg") != nullptr) muon_ddYdZ_seg = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_ddYdZ_seg");
            if(theTree->GetBranch("muon_glbTrkNChi2") != nullptr) muon_glbTrkNChi2 = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_glbTrkNChi2");
            if(theTree->GetBranch("muon_hadMax") != nullptr) muon_hadMax = new TTreeReaderValue<std::vector<float> >(*theReader, "muon_hadMax");
			if(theTree->GetBranch("elec_nLostHits") != nullptr ) elec_nLostHits = new TTreeReaderValue<std::vector<char> >(*theReader, "elec_nLostHits");                                      
			if(theTree->GetBranch("elec_candIdx") != nullptr ) elec_candIdx = new TTreeReaderValue<std::vector<unsigned int> >(*theReader, "elec_candIdx");                                
			if(theTree->GetBranch("elec_dEtaAtVtx") != nullptr ) elec_dEtaAtVtx = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_dEtaAtVtx");                                     
			if(theTree->GetBranch("elec_dEtaSeedAtVtx") != nullptr ) elec_dEtaSeedAtVtx = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_dEtaSeedAtVtx");                                 
			if(theTree->GetBranch("elec_dPhiAtVtx") != nullptr ) elec_dPhiAtVtx = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_dPhiAtVtx");                                     
			if(theTree->GetBranch("elec_eOverPInv") != nullptr ) elec_eOverPInv = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_eOverPInv");                                     
			if(theTree->GetBranch("elec_hOverEBc") != nullptr ) elec_hOverEBc = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_hOverEBc");                                      
			if(theTree->GetBranch("elec_ip3D") != nullptr ) elec_ip3D = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_ip3D");                                          
			if(theTree->GetBranch("elec_sCEta") != nullptr ) elec_sCEta = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_sCEta");                                         
			if(theTree->GetBranch("elec_sCPhi") != nullptr ) elec_sCPhi = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_sCPhi");                                         
			if(theTree->GetBranch("elec_sigmaIEtaIEta") != nullptr ) elec_sigmaIEtaIEta = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_sigmaIEtaIEta");                                 
			if(theTree->GetBranch("elec_sigmaIPhiIPhi") != nullptr ) elec_sigmaIPhiIPhi = new TTreeReaderValue<std::vector<float> >(*theReader, "elec_sigmaIPhiIPhi");                                 
        	if(theTree->GetBranch("gen_charge") != nullptr) gen_charge = new TTreeReaderValue<std::vector<char> >(*theReader, "gen_charge");
        	if(theTree->GetBranch("gen_pdgId") != nullptr) gen_pdgId = new TTreeReaderValue<std::vector<int> >(*theReader, "gen_pdgId");
        	if(theTree->GetBranch("gen_status") != nullptr) gen_status = new TTreeReaderValue<std::vector<unsigned char> >(*theReader, "gen_status");
        	if(theTree->GetBranch("gen_statusBit") != nullptr) gen_statusBit = new TTreeReaderValue<std::vector<unsigned short> >(*theReader, "gen_statusBit");
        	if(theTree->GetBranch("gen_angle2D") != nullptr) gen_angle2D = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_angle2D");
        	if(theTree->GetBranch("gen_angle3D") != nullptr) gen_angle3D = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_angle3D");
        	if(theTree->GetBranch("gen_decayLength2D") != nullptr) gen_decayLength2D = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_decayLength2D");
        	if(theTree->GetBranch("gen_decayLength3D") != nullptr) gen_decayLength3D = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_decayLength3D");
        	if(theTree->GetBranch("gen_eta") != nullptr) gen_eta = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_eta");
        	if(theTree->GetBranch("gen_mass") != nullptr) gen_mass = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_mass");
        	if(theTree->GetBranch("gen_p") != nullptr) gen_p = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_p");
        	if(theTree->GetBranch("gen_pT") != nullptr) gen_pT = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_pT");
        	if(theTree->GetBranch("gen_phi") != nullptr) gen_phi = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_phi");
        	if(theTree->GetBranch("gen_y") != nullptr) gen_y = new TTreeReaderValue<std::vector<float> >(*theReader, "gen_y");
        	if(theTree->GetBranch("gen_dauIdx") != nullptr) gen_dauIdx = new TTreeReaderValue<std::vector<vector<unsigned short> > >(*theReader, "gen_dauIdx");
        	if(theTree->GetBranch("gen_momIdx") != nullptr) gen_momIdx = new TTreeReaderValue<std::vector<vector<unsigned short> > >(*theReader, "gen_momIdx");
        	if(theTree->GetBranch("gen_candIdx") != nullptr) gen_candIdx = new TTreeReaderValue<std::vector<vector<unsigned int> > >(*theReader, "gen_candIdx");
        	if(theTree->GetBranch("gen_trackParameters") != nullptr) gen_trackParameters = new TTreeReaderValue<std::vector<vector<float> > >(*theReader, "gen_trackParameters");
        };
        ~ParticleTreeReader(){};
        TFile* theFile;
        TTree* theTree;
        TTreeReader* theReader;
        TTreeReaderValue<unsigned char>* nPV      ;
        TTreeReaderValue<unsigned short>* BXNb     ;
        TTreeReaderValue<unsigned short>* NtrkHP   ;
        TTreeReaderValue<unsigned short>* Ntrkoffline;
        TTreeReaderValue<unsigned int>* EventNb  ;
        TTreeReaderValue<unsigned int>* LSNb     ;
        TTreeReaderValue<unsigned int>* RunNb    ;
        TTreeReaderValue<int>* Ntrkgen    ;
        TTreeReaderValue<float>* HFsumETMinus;
        TTreeReaderValue<float>* HFsumETPlus;
        TTreeReaderValue<float>* Npixel   ;
        TTreeReaderValue<float>* PFHFmaxEMinus;
        TTreeReaderValue<float>* PFHFmaxEPlus;
        TTreeReaderValue<float>* PFHFsumETMinus;
        TTreeReaderValue<float>* PFHFsumETPlus;
        TTreeReaderValue<float>* ZDCMinus ;
        TTreeReaderValue<float>* ZDCPlus  ;
        TTreeReaderValue<float>* bestvtxX ;
        TTreeReaderValue<float>* bestvtxY ;
        TTreeReaderValue<float>* bestvtxZ ;
        TTreeReaderValue<std::vector<bool> >* evtSel   ;
        TTreeReaderValue<std::vector<bool> >* passHLT  ;
        TTreeReaderValue<std::vector<bool> >* passL1   ;
        TTreeReaderValue<std::vector<bool> >* cand_matchGEN;
        TTreeReaderValue<std::vector<bool> >* cand_momMatchGEN;
        TTreeReaderValue<std::vector<char> >* cand_charge;
        TTreeReaderValue<std::vector<int> >* cand_genPdgId;
        TTreeReaderValue<std::vector<int> >* cand_isSwap;
        TTreeReaderValue<std::vector<int> >* cand_pdgId;
        TTreeReaderValue<std::vector<unsigned char> >* cand_status;
        TTreeReaderValue<std::vector<unsigned short> >* cand_genIdx;
        TTreeReaderValue<std::vector<unsigned short> >* cand_srcIdx;
        TTreeReaderValue<std::vector<unsigned short> >* cand_trkIdx;
        TTreeReaderValue<std::vector<unsigned int> >* cand_momMatchIdx;
        TTreeReaderValue<std::vector<float> >* cand_angle2D;
        TTreeReaderValue<std::vector<float> >* cand_angle3D;
        TTreeReaderValue<std::vector<float> >* cand_dca ;
        TTreeReaderValue<std::vector<float> >* cand_decayLength2D;
        TTreeReaderValue<std::vector<float> >* cand_decayLength3D;
        TTreeReaderValue<std::vector<float> >* cand_decayLengthError2D;
        TTreeReaderValue<std::vector<float> >* cand_decayLengthError3D;
        TTreeReaderValue<std::vector<float> >* cand_eta ;
        TTreeReaderValue<std::vector<float> >* cand_mass;
        TTreeReaderValue<std::vector<float> >* cand_p   ;
        TTreeReaderValue<std::vector<float> >* cand_pT  ;
        TTreeReaderValue<std::vector<float> >* cand_phi ;
        TTreeReaderValue<std::vector<float> >* cand_pseudoDecayLengthError2D;
        TTreeReaderValue<std::vector<float> >* cand_pseudoDecayLengthError3D;
        TTreeReaderValue<std::vector<float> >* cand_vtxChi2;
        TTreeReaderValue<std::vector<float> >* cand_vtxProb;
        TTreeReaderValue<std::vector<float> >* cand_y   ;
        TTreeReaderValue<std::vector< std::vector<unsigned int> > >* cand_dauIdx;
        TTreeReaderValue<std::vector< std::vector<unsigned int> > >* cand_momIdx;
        TTreeReaderValue<std::vector< std::vector<float> > >* cand_etaDau;
        TTreeReaderValue<std::vector< std::vector<float> > >* cand_massDau;
        TTreeReaderValue<std::vector< std::vector<float> > >* cand_pTDau;
        TTreeReaderValue<std::vector< std::vector<float> > >* cand_phiDau;
        // Trk
        TTreeReaderValue<std::vector<bool> >* trk_isHP ;
        TTreeReaderValue<std::vector<int> >* trk_nLayer;
        TTreeReaderValue<std::vector<unsigned short> >* trk_algo ;
        TTreeReaderValue<std::vector<unsigned short> >* trk_nHit ;
        TTreeReaderValue<std::vector<float> >* trk_nChi2;
        TTreeReaderValue<std::vector<float> >* trk_pTErr;
        TTreeReaderValue<std::vector<float> >* trk_xyDCASignificance;
        TTreeReaderValue<std::vector<float> >* trk_zDCASignificance;
        TTreeReaderValue<std::vector<std::vector<unsigned int> > >*  trk_candIdx;
        TTreeReaderValue<std::vector<std::vector<float> > >* trk_trackCovariance;
        TTreeReaderValue<std::vector<std::vector<float> > >* trk_trackParameters;
        // Mu
        TTreeReaderValue<std::vector<bool> >* muon_hybridSoftID;
        TTreeReaderValue<std::vector<bool> >* muon_isGlobal;
        TTreeReaderValue<std::vector<bool> >* muon_isOneStTight;
        TTreeReaderValue<std::vector<bool> >* muon_isPF;
        TTreeReaderValue<std::vector<bool> >* muon_isTracker;
        TTreeReaderValue<std::vector<bool> >* muon_softID;
        TTreeReaderValue<std::vector<bool> >* muon_tightID;
        TTreeReaderValue<std::vector<char> >* muon_nMuonHit;
        TTreeReaderValue<std::vector<char> >* muon_nPixelHit;
        TTreeReaderValue<std::vector<char> >* muon_nPixelLayer;
        TTreeReaderValue<std::vector<char> >* muon_nTrackerLayer;
        TTreeReaderValue<std::vector<unsigned char> >* muon_nMatchedStation;
        TTreeReaderValue<std::vector<unsigned char> >* muon_nMatches;
        TTreeReaderValue<std::vector<unsigned int> >* muon_candIdx;
        TTreeReaderValue<std::vector<unsigned int> >* muon_selectionType;
        TTreeReaderValue<std::vector<unsigned int> >* muon_selector;
        TTreeReaderValue<std::vector<float> >* muon_bestTrkdXY;
        TTreeReaderValue<std::vector<float> >* muon_bestTrkdZ;
        TTreeReaderValue<std::vector<float> >* muon_dXSig_seg;
        TTreeReaderValue<std::vector<float> >* muon_dXY ;
        TTreeReaderValue<std::vector<float> >* muon_dX_seg;
        TTreeReaderValue<std::vector<float> >* muon_dYSig_seg;
        TTreeReaderValue<std::vector<float> >* muon_dY_seg;
        TTreeReaderValue<std::vector<float> >* muon_dZ  ;
        TTreeReaderValue<std::vector<float> >* muon_ddXdZSig_seg;
        TTreeReaderValue<std::vector<float> >* muon_ddXdZ_seg;
        TTreeReaderValue<std::vector<float> >* muon_ddYdZSig_seg;
        TTreeReaderValue<std::vector<float> >* muon_ddYdZ_seg;
        TTreeReaderValue<std::vector<float> >* muon_glbTrkNChi2;
        TTreeReaderValue<std::vector<float> >* muon_hadMax;
        // Ele
		TTreeReaderValue<std::vector<char> >* elec_nLostHits;                                      
		TTreeReaderValue<std::vector<unsigned int> >* elec_candIdx;                                
		TTreeReaderValue<std::vector<float> >* elec_dEtaAtVtx;                                     
		TTreeReaderValue<std::vector<float> >* elec_dEtaSeedAtVtx;                                 
		TTreeReaderValue<std::vector<float> >* elec_dPhiAtVtx;                                     
		TTreeReaderValue<std::vector<float> >* elec_eOverPInv;                                     
		TTreeReaderValue<std::vector<float> >* elec_hOverEBc;                                      
		TTreeReaderValue<std::vector<float> >* elec_ip3D;                                          
		TTreeReaderValue<std::vector<float> >* elec_sCEta;                                         
		TTreeReaderValue<std::vector<float> >* elec_sCPhi;                                         
		TTreeReaderValue<std::vector<float> >* elec_sigmaIEtaIEta;                                 
		TTreeReaderValue<std::vector<float> >* elec_sigmaIPhiIPhi;                                 
	TTreeReaderValue<std::vector<char> >* gen_charge;
        TTreeReaderValue<std::vector<int> >* gen_pdgId;
        TTreeReaderValue<std::vector<unsigned char> >* gen_status;
        TTreeReaderValue<std::vector<unsigned short> >* gen_statusBit;
        TTreeReaderValue<std::vector<float> >* gen_angle2D;
        TTreeReaderValue<std::vector<float> >* gen_angle3D;
        TTreeReaderValue<std::vector<float> >* gen_decayLength2D;
        TTreeReaderValue<std::vector<float> >* gen_decayLength3D;
        TTreeReaderValue<std::vector<float> >* gen_eta;
        TTreeReaderValue<std::vector<float> >* gen_mass;
        TTreeReaderValue<std::vector<float> >* gen_p;
        TTreeReaderValue<std::vector<float> >* gen_pT;
        TTreeReaderValue<std::vector<float> >* gen_phi;
        TTreeReaderValue<std::vector<float> >* gen_y;
        TTreeReaderValue<std::vector<vector<unsigned short> > >* gen_dauIdx;
        TTreeReaderValue<std::vector<vector<unsigned short> > >* gen_momIdx;
        TTreeReaderValue<std::vector<vector<unsigned int> > >* gen_candIdx;
        TTreeReaderValue<std::vector<vector<float> > >* gen_trackParameters;
        
};


#endif
